<Window x:Class="Electronic.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:Electronic"
        x:Name="window"
        Title="Триггеры" MinHeight="640" MinWidth="800" Height="640" Width="800" WindowStartupLocation="CenterScreen" Icon="{StaticResource ICON}">
    <Grid x:Name="grid">
        <Grid x:Name="MAINMENUGRID" Visibility="Visible">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.3*"/>
                <ColumnDefinition Width="0.5*"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="0.3*"/>
                <RowDefinition/>
                <RowDefinition Height="0.3*"/>
            </Grid.RowDefinitions>
            <ListBox x:Name="MAINMENULISTBOX" Style="{StaticResource ResourceKey=MainMenu}" SelectionChanged="MAINMENULISTBOX_SelectionChanged" Grid.Column="1" Grid.RowSpan="3" VerticalAlignment="Center" HorizontalAlignment="Stretch" MaxWidth="400">
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="Template" Value="{StaticResource MainMenuItem}"/> 
                        <EventSetter Event="MouseEnter" Handler="listBox1_ListBoxItem_MouseEnter"/>
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>
            <TextBlock HorizontalAlignment="Stretch" Margin="10,0,10,45" FontSize="16" Foreground="SteelBlue" VerticalAlignment="Bottom" Grid.ColumnSpan="3" Grid.Row="2" TextWrapping="WrapWithOverflow"><Run Text="Выберите триггер и постройте диаграмму его выходного сигнала на основе заданных входных диаграмм. В этом режиме ваш результат не сохраняется."/></TextBlock>
            <local:VisualCircuit x:Name="MAINMENUCIRCUITBOX" Grid.Column="2" Grid.Row="1" Margin="100,10,150,10" MaxWidth="300" VerticalAlignment="Stretch"/>
            <Grid HorizontalAlignment="Stretch"  Height="40" VerticalAlignment="Bottom" Grid.ColumnSpan="3" Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition />
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <Grid.Background>
                    <LinearGradientBrush>
                        <LinearGradientBrush.RelativeTransform>
                            <RotateTransform Angle="90"/>
                        </LinearGradientBrush.RelativeTransform>
                        <GradientStop Color="SkyBlue" Offset="0"/>
                        <GradientStop Color="SteelBlue" Offset="1"/>
                    </LinearGradientBrush>
                </Grid.Background>
                <Line Stroke="SteelBlue" StrokeThickness="2" VerticalAlignment="Top" X1="0" X2="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type Grid}, Mode=FindAncestor}}" Grid.ColumnSpan="3"/>
                <Button x:Name="MAINMENU_BUTTON_BACK" Click="MAINMENU_BUTTON_BACK_Click" Content="Назад" HorizontalAlignment="Left" Margin="5,4" VerticalAlignment="Stretch" Width="98" Grid.Column="0"/>
            </Grid>
        </Grid>
        <Grid x:Name="GETTASKGRID" Visibility="Collapsed" IsEnabled="False">
            <TextBlock HorizontalAlignment="Stretch" Foreground="MidnightBlue" VerticalAlignment="Top" FontSize="18" TextWrapping="Wrap" Margin="10,30"><Run Text="Вам предлагается пройти тестирование по схемотехнике."/><LineBreak/><Run Text="Вам будут даны диаграммы входных сигналов, на основе которых нужно построить диаграмму выходного сигнала каждого триггера."/><LineBreak/><Run Text="Вернуться к предыдущему или повторить ответ нельзя. Завершить тестирование можно в любой момент."/><LineBreak/><Run Text="На каждый ответ дается 2 минуты."/><LineBreak/><Run Foreground="DodgerBlue" Text="Для возврата к окну выбора и регистрации нажмите кнопку &quot;Выход&quot;, если вы готовы к тестированию, жмите &quot;Начать&quot;."/></TextBlock>
            <Label HorizontalAlignment="Center" FontSize="16" VerticalAlignment="Center" Content="Ожидайте активации окна, идет подключение к серверу...">
                <Label.Style>
                    <Style TargetType="Label">
                        <Style.Triggers>
                            <Trigger Property="IsEnabled" Value="true"><Setter Property="Visibility" Value="Collapsed"/></Trigger>
                        </Style.Triggers>
                    </Style>
                </Label.Style>
            </Label>
            <Button HorizontalAlignment="Center" Click="Start_Click" VerticalAlignment="Bottom" Content="Начать" Padding="60,10" Margin="80" FontSize="18"/>
            <Button HorizontalAlignment="Center" Click="MAINMENU_BUTTON_BACK_Click" VerticalAlignment="Bottom" Content="Выход" Padding="63,10" Margin="20" FontSize="18"/>
        </Grid>
        
        <Grid x:Name="TESTGRID" Visibility="Collapsed">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.7*" MaxWidth="700"/>
                <ColumnDefinition  MaxWidth="700"/>
                <ColumnDefinition Width="0.01*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto" MaxHeight="250"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Label x:Name="TEST_NAME" FontWeight="SemiBold" Foreground="SteelBlue" Grid.ColumnSpan="2"/>
            <Label x:Name="TEST_CHALLENGE" FontWeight="SemiBold" Foreground="MidnightBlue" HorizontalAlignment="Right" Grid.ColumnSpan="3" Content="ЗАДАНИЕ 1/6"/>
            <local:Out_Interface x:Name="TEST_OUTPUT" MaxWidth="800" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Margin="10,35,10,5" Grid.Column="1"/>
            <local:Input_Interface x:Name="TEST_INPUT" MaxWidth="800" HorizontalAlignment="Stretch" Margin="10,5,10,0" VerticalAlignment="Top"  Grid.Column="1" Grid.Row="1" TabIndex="0" Focusable="True"/>
            <local:Out_Interface x:Name="TEST_OUT_VALID" MaxWidth="800" HorizontalAlignment="Stretch" VerticalAlignment="Top" Margin="10,5,10,0" Grid.Column="1" Visibility="Hidden" Grid.Row="2"/>
            <local:VisualCircuit x:Name="TEST_CIRCUIT_BOX" MaxWidth="250" HorizontalAlignment="Stretch" VerticalAlignment="Top" Margin="80,50,40,10" Grid.RowSpan="2" IsHitTestVisible="False" IsEnabled="False"/>
            <TextBlock HorizontalAlignment="Stretch" Foreground="SteelBlue" VerticalAlignment="Bottom" FontSize="18" TextWrapping="Wrap" Grid.Row="2" Grid.ColumnSpan="2" Margin="10,45"><Run Text="Для установки значения в &quot;1&quot; используйте кнопки W или 1, для установки значения в &quot;0&quot; - кнопки S и 0 на клавиатуре."/><LineBreak/><Run Text="Переключение осуществляется кноками A и D."/></TextBlock>
            <Grid HorizontalAlignment="Stretch" Height="40" VerticalAlignment="Bottom" Grid.ColumnSpan="3" Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition />
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <Grid.Background>
                    <LinearGradientBrush>
                        <LinearGradientBrush.RelativeTransform>
                            <RotateTransform Angle="90"/>
                        </LinearGradientBrush.RelativeTransform>
                        <GradientStop Color="SkyBlue" Offset="0"/>
                        <GradientStop Color="SteelBlue" Offset="1"/>
                    </LinearGradientBrush>
                </Grid.Background>
                <Line Stroke="SteelBlue" StrokeThickness="2" VerticalAlignment="Top" X1="0" X2="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type Grid}, Mode=FindAncestor}}" Grid.ColumnSpan="3"/>
                <Button x:Name="TEST_BUTTON_END" Click="TEST_BUTTON_END_Click" Content="Завершить" HorizontalAlignment="Left" Margin="5,4" VerticalAlignment="Stretch" Width="98" Grid.Column="0" IsTabStop="False"/>
                <Button x:Name="TEST_BUTTON_NEXT" Command="local:Local_Commands.Next" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}" HorizontalAlignment="Right" Margin="5,4" VerticalAlignment="Stretch" Width="98" Grid.Column="2" IsTabStop="False"/>
                <ProgressBar x:Name="TEST_TIME_VALUE" Visibility="Hidden" ValueChanged="TEST_TIME_VALUE_ValueChanged" HorizontalAlignment="Stretch" Margin="5,4" VerticalAlignment="Stretch" Foreground="RoyalBlue" Background="SteelBlue" Maximum="120" Grid.Column="1"/>
                <Label x:Name="TEST_TIME_LABEL" Visibility="{Binding Visibility, ElementName=TEST_TIME_VALUE}" Grid.Column="1" HorizontalAlignment="Center" FontSize="14" FontWeight="Medium" Foreground="MidnightBlue"  VerticalAlignment="Center" Content="Осталось 2 минуты"/>
            </Grid>

        </Grid>
       </Grid>
    <Window.CommandBindings>
        <CommandBinding Command="local:Local_Commands.Next" Executed="Next_Executed"/>
    </Window.CommandBindings>
</Window>
